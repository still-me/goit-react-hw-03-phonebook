{"version":3,"sources":["Section/Section.js","ContactForm/ContactForm.js","ContactList/ContactList.js","Filter/Filter.js","App.js","index.js"],"names":["Section","title","children","className","INITIAL_STATE","name","number","ContactForm","state","handelChange","target","value","setState","handelSubmit","e","preventDefault","props","onSubmit","reset","this","type","pattern","required","onChange","Component","ContactList","contacts","onDeleteContact","map","id","onClick","Filter","App","filter","addContact","newContact","shortid","generate","includesContact","find","contact","alert","changeFilter","currentTarget","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","contactId","parsedContacts","JSON","parse","localStorage","getItem","prevProps","prevState","prevContacts","nextContacts","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42a45f29.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Section.scss\";\n\nconst Section = ({ title, children }) => (\n  <section className=\"section\">\n    <div className=\"container\">\n      <h2 className=\"section__title\">{title}</h2>\n      {children}\n    </div>\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from \"react\";\nimport \"./ContactForm.scss\";\n\nconst INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  state = {\n    ...INITIAL_STATE,\n  };\n\n  handelChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handelSubmit = (e) => {\n    e.preventDefault();\n\n    const { name, number } = this.state;\n\n    this.props.onSubmit(name, number);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form className=\"form\" onSubmit={this.handelSubmit}>\n        <label className=\"form__label\">\n          Name\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={this.handelChange}\n          />\n        </label>\n        <label className=\"form__label\">\n          Number\n          <input\n            className=\"form__input\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            value={number}\n            onChange={this.handelChange}\n          />\n        </label>\n        <button className=\"form__button\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./ContactList.scss\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className=\"contacts__list\">\n    {contacts.map(({ id, name, number }) => (\n      <li className=\"contacts__item\" key={id}>\n        <p className=\"contact__info\">\n          {name}: {number}\n        </p>\n        <button\n          className=\"contact__button--delete\"\n          type=\"button\"\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n        .isRequired,\n    })\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Filter.scss\";\n\nconst Filter = ({ value, onChange }) => (\n  <label className=\"filter__label\">\n    Find contacts by name\n    <input\n      className=\"filter__input\"\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    ></input>\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\n\nimport Section from \"./Section\";\nimport ContactForm from \"./ContactForm\";\nimport ContactList from \"./ContactList\";\nimport Filter from \"./Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  addContact = (name, number) => {\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    const { contacts } = this.state;\n    const includesContact = contacts.find(\n      (contact) => contact.name === newContact.name\n    );\n\n    includesContact\n      ? alert(`${includesContact.name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [newContact, ...contacts],\n        }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevContacts = prevState.contacts;\n    const nextContacts = this.state.contacts;\n\n    if (nextContacts !== prevContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div>\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={this.addContact} />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles/base.scss\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}